SOS ==> "PROBE SIDE" and "BUILD SIDE" join queries in SOS.


CREATE TABLE DEMO_DB.DEMO_SCHEMA.ORDERS_VER1 AS SELECT * FROM SNOWFLAKE_SAMPLE_DATA.TPCH_SF100.ORDERS;
CREATE TABLE DEMO_DB.DEMO_SCHEMA.ORDERS_VER2_WITHSOS CLONE DEMO_DB.DEMO_SCHEMA.ORDERS_VER1;
--Enabling SOS to this table--
ALTER TABLE DEMO_DB.DEMO_SCHEMA.ORDERS_VER2_WITHSOS ADD SEARCH OPTIMIZATION;
--Seeing whether search optimization service is enabled OR not--
SHOW TABLES LIKE '%ORDERS_VER2_WITHSOS%';


CREATE TABLE DEMO_DB.DEMO_SCHEMA.CUSTOMER_VER1 AS SELECT * FROM SNOWFLAKE_SAMPLE_DATA.TPCH_SF100.CUSTOMER;
CREATE TABLE DEMO_DB.DEMO_SCHEMA.CUSTOMER_VER2 CLONE DEMO_DB.DEMO_SCHEMA.CUSTOMER_VER1;

--Without SOS --
SELECT CUST.C_NAME
FROM 
    DEMO_DB.DEMO_SCHEMA.ORDERS_VER1 ORD JOIN DEMO_DB.DEMO_SCHEMA.CUSTOMER_VER1 CUST
    ON (ORD.O_CUSTKEY=CUST.C_CUSTKEY)
    WHERE CUST.C_CUSTKEY=5200010;

--With SOS--
SELECT CUST.C_NAME
FROM 
    DEMO_DB.DEMO_SCHEMA.ORDERS_VER2_WITHSOS ORD JOIN DEMO_DB.DEMO_SCHEMA.CUSTOMER_VER2 CUST
    ON (ORD.O_CUSTKEY=CUST.C_CUSTKEY)
    WHERE CUST.C_CUSTKEY=5200010;

    
-- Automatic Clustering Costs --
SELECT SYSTEM$ESTIMATE_SEARCH_OPTIMIZATION_COSTS('ORDERS_VER2_WITHSOS');
